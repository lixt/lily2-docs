LILY2 ARCHITECTURE REFERENCE
────────────────────────────
Copyright (C) DSP Group, Institute of Microelectronics, Tsinghua University
All rights reserved.


Table of Contents
─────────────────
   Abstract
1. General-Purpose Registers
2. Functional Units
3. Load and Store Paths
4. Control Registers
5. Parallelism in Superscalar
6. Parallelism in VLIW
7. Branch Prediction
8. Value Prediction


1. General-Purpose Registers
────────────────────────────

Arch-Independent Features
─────────────────────────

Figure 1.1 showed below is LILY2 arch-independent register files.

    ┌─────────────────┐ ┌─────────────────────────────┐
    │    Registers    │ │        Register-Pairs       │
    ├─────────────────┤ ├─────────────────────────────┤
    │  a     b     c  │ │    a         b         c    │
    ├─────────────────┤ ├─────────────────────────────┤
    │ a0    b0    c0  │ │ a1 :a0    b1 :b0    c1 :c0  │
    │ a1    b1    c1  │ │ a3 :a2    b3 :b2    c3 :c2  │
    │ a2    b2    c2  │ │ a5 :a4    b5 :b4    c5 :c4  │
    │ a3    b3    c3  │ │ a7 :a6    b7 :b6    c7 :c6  │
    │ a4    b4    c4  │ │ a9 :a8    b9 :b8            │
    │ a5    b5    c5  │ │ a11:a10   b11:b10           │
    │ a6    b6    c6  │ │ a13:a12   b13:b12           │
    │ a7    b7    c7  │ │ a15:a14   b15:b14           │
    │ a8    b8        │ │ a17:a16   b17:b16           │
    │ a9    b9        │ │ a19:a18   b19:b18           │
    │ a10   b10       │ │ a21:a20   b21:b20           │
    │ a11   b11       │ │ a23:a22   b23:b22           │
    │ a12   b12       │ └─────────────────────────────┘
    │ a13   b13       │ ┌─────────────────────────────────────────────────────┐
    │ a14   b14       │ │                 Register-Pair-Pairs                 │
    │ a15   b15       │ ├─────────────────────────────────────────────────────┤
    │ a16   b16       │ │        a                 b                 c        │
    │ a17   b17       │ ├─────────────────────────────────────────────────────┤
    │ a18   b18       │ │ a3 :a2 :a1 :a0    b3 :b2 :b1 :b0    c3 :c2 :c1 :c0  │
    │ a19   b19       │ │ a7 :a6 :a5 :a4    b7 :b6 :b5 :b4    c7 :c6 :c5 :c4  │
    │ a20   b20       │ │ a11:a10:a9 :a8    b11:b10:b9 :b8                    │
    │ a21   b21       │ │ a15:a14:a13:a12   b15:b14:b13:b12                   │
    │ a22   b22       │ │ a19:a18:a17:a16   b19:b18:b17:b16                   │
    │ a23   b23       │ │ a23:a22:a21:a20   b23:b22:b21:b20                   │
    └─────────────────┘ └─────────────────────────────────────────────────────┘
    Figure 1.1 LILY2 arch-independent register files. Each register is 32-bit
    width. The index of register-pair and register-pair-pair is the same as the
    least significant register in it.

Figure 1.2 showed below is number of LILY2 arch-independent register file ports.

    ┌─────────────────────────────────────────────────┐
    │   Register Port              a       b      c   │
    ├─────────────────────────────────────────────────┤
    │       I-Port                 8       8      -   │
    ├─────────────────────────────────────────────────┤
    │       O-Port                 7       7      -   │
    └─────────────────────────────────────────────────┘
    Figure 1.2 Number of LILY2 arch-independent register
    file ports. There are only eight registers in `c',
    so the ports number of `c' is not considered.



Arch-Dependent, Superscalar Features
────────────────────────────────────

Figure 1.3 showed below is LILY2 superscalar register files.

    ┌───────────┐ ┌───────────────────┐
    │ Registers │ │   Register-Pairs  │
    ├───────────┤ ├───────────────────┤
    │  r     f  │ │    r         f    │
    ├───────────┤ ├───────────────────┤
    │ r0    f0  │ │ r1 :r0    f1 :f0  │
    │ r1    f1  │ │ r3 :r2    f3 :f2  │
    │ r2    f2  │ │ r5 :r4    f5 :f4  │
    │ r3    f3  │ │ r7 :r6    f7 :f6  │
    │ r4    f4  │ │ r9 :r8    f9 :f8  │
    │ r5    f5  │ │ r11:r10   f11:f10 │
    │ r6    f6  │ │ r13:r12   f13:f12 │
    │ r7    f7  │ │ r15:r14   f15:f14 │
    │ r8    f8  │ │ r17:r16   f17:f16 │
    │ r9    f9  │ │ r19:r18   f19:f18 │
    │ r10   f10 │ │ r21:r20   f21:f20 │
    │ r11   f11 │ │ r23:r22   f23:f22 │
    │ r12   f12 │ ├───────────────────┤
    │ r13   f13 │ │ r25:r24 / f25:f24 │
    │ r14   f14 │ │ r27:r26 / f27:f26 │
    │ r15   f15 │ │ r29:r28 / f29:f28 │
    │ r16   f16 │ │ r31:r30 / f31:f30 │
    │ r17   f17 │ └───────────────────┘
    │ r18   f18 │
    │ r19   f19 │ ┌───────────────────────────────────┐
    │ r20   f20 │ │         Register-Pair-Pairs       │
    │ r21   f21 │ ├───────────────────────────────────┤
    │ r22   f22 │ │        r                 f        │
    │ r23   f23 │ ├───────────────────────────────────┤
    ├───────────┤ │ r3 :r2 :r1 :r0    f3 :f2 :f1 :f0  │
    │ r24 / f24 │ │ r7 :r6 :r5 :r4    f7 :f6 :f5 :f4  │
    │ r25 / f25 │ │ r11:r10:r9 :r8    f11:f10:f9 :f8  │
    │ r26 / f26 │ │ r15:r14:r13:r12   f15:f14:f13:f12 │
    │ r27 / f27 │ │ r19:r18:r17:r16   f19:f18:f17:f16 │
    │ r28 / f28 │ │ r23:r22:r21:r20   f23:f22:f21:f20 │
    │ r29 / f29 │ ├───────────────────────────────────┤
    │ r30 / f30 │ │ r27:r26:r25:r24 / f27:f26:f25:f24 │
    │ r31 / f31 │ │ r31:r20:r29:r28 / f31:f30:f29:f28 │
    └───────────┘ └───────────────────────────────────┘
    Figure 1.3 LILY2 superscalar register files. `r' is
    for fixed-point and `f' is for floating-point. Each
    register is 32-bit width. The index of register-pair
    and register-pair-pair is the same as the least
    significant register in it.

Figure 1.4 showed below is number of LILY2 superscalar register file ports.

    ┌─────────────────────────────────────────────────┐
    │   Register Port                     r       f   │
    ├─────────────────────────────────────────────────┤
    │       I-Port                        8       8   │
    ├─────────────────────────────────────────────────┤
    │       O-Port                        7       7   │
    └─────────────────────────────────────────────────┘
    Figure 1.4 Number of LILY2 superscalar register
    file ports.


Arch-Dependent, VLIW Features
─────────────────────────────

Figure 1.5 showed below is LILY2 VLIW register files.

    ┌───────────┐ ┌───────────────────┐
    │ Registers │ │   Register-Pairs  │
    ├───────────┤ ├───────────────────┤
    │  x     y  │ │    x         y    │
    ├───────────┤ ├───────────────────┤
    │ x0    y0  │ │ x1 :x0    y1 :y0  │
    │ x1    y1  │ │ x3 :x2    y3 :y2  │
    │ x2    y2  │ │ x5 :x4    y5 :y4  │
    │ x3    y3  │ │ x7 :x6    y7 :y6  │
    │ x4    y4  │ │ x9 :x8    y9 :y8  │
    │ x5    y5  │ │ x11:x10   y11:y10 │
    │ x6    y6  │ │ x13:x12   y13:y12 │
    │ x7    y7  │ │ x15:x14   y15:y14 │
    │ x8    y8  │ │ x17:x16   y17:y16 │
    │ x9    y9  │ │ x19:x18   y19:y18 │
    │ x10   y10 │ │ x21:x20   y21:y20 │
    │ x11   y11 │ │ x23:x22   y23:y22 │
    │ x12   y12 │ ├───────────────────┤
    │ x13   y13 │ │ x25:x24 / y25:y24 │
    │ x14   y14 │ │ x27:x26 / y27:y26 │
    │ x15   y15 │ │ x29:x28 / y29:y28 │
    │ x16   y16 │ │ x31:x30 / y31:y30 │
    │ x17   y17 │ └───────────────────┘
    │ x18   y18 │
    │ x19   y19 │ ┌───────────────────────────────────┐
    │ x20   y20 │ │         Register-Pair-Pairs       │
    │ x21   y21 │ ├───────────────────────────────────┤
    │ x22   y22 │ │        x                 y        │
    │ x23   y23 │ ├───────────────────────────────────┤
    ├───────────┤ │ x3 :x2 :x1 :x0    y3 :y2 :y1 :y0  │
    │ x24 / y24 │ │ x7 :x6 :x5 :x4    y7 :y6 :y5 :y4  │
    │ x25 / y25 │ │ x11:x10:x9 :x8    y11:y10:y9 :y8  │
    │ x26 / y26 │ │ x15:x14:x13:x12   y15:y14:y13:y12 │
    │ x27 / y27 │ │ x19:x18:x17:x16   y19:y18:y17:y16 │
    │ x28 / y28 │ │ x23:x22:x21:x20   y23:y22:y21:y20 │
    │ x29 / y29 │ ├───────────────────────────────────┤
    │ x30 / y30 │ │ x27:x26:x25:x24 / y27:y26:y25:y24 │
    │ x31 / y31 │ │ x31:x20:x29:x28 / y31:y30:y29:y28 │
    └───────────┘ └───────────────────────────────────┘
    Figure 1.5 LILY2 VLIW register files. `x' is for
    cluster-x and `y' is for cluster-y. Each register
    is 32-bit width. The index of register-pair and
    register-pair-pair is the same as the least
    significant register in it.

Figure 1.6 showed below is number of LILY2 VLIW register file ports.

    ┌─────────────────────────────────────────────────┐
    │   Register Port                     x       y   │
    ├─────────────────────────────────────────────────┤
    │       I-Port                        8       8   │
    ├─────────────────────────────────────────────────┤
    │       O-Port                        7       7   │
    └─────────────────────────────────────────────────┘
    Figure 1.6 Number of LILY2 VLIW register file ports.


2. Functional Units
───────────────────

Arch-Independent Features:
──────────────────────────

Figure 2.1 showed below is LILY2 functional units pipeline stages.

    ┌──────────────────────────────────────────────────────────┐
    │                                                          │
    │    ┌──────┐                                              │
    │    │  A1  │                                              │
    │    └──────┘                                              │
    │                                                          │
    │    ┌──────┐                                              │
    │    │  A1  │                                              │
    │    └──────┘                                              │
    │                                                          │
    │    ┌──────┐      ┌──────┐      ┌──────┐                  │
    │    │  M1  │──────│  M2  │──────│  M3  │                  │
    │    └──────┘      └──────┘      └──────┘                  │
    │                                                          │
    │    ┌──────┐      ┌──────┐      ┌──────┐                  │
    │    │  M1  │──────│  M2  │──────│  M3  │                  │
    │    └──────┘      └──────┘      └──────┘                  │
    │                                                          │
    │    ┌──────┐      ┌──────┐      ┌──────┐      ┌──────┐    │
    │    │  D1  │──────│  D2  │──────│  D3  │──────│  D4  │    │
    │    └──────┘      └──────┘      └──────┘      └──────┘    │
    │                                                          │
    │    ┌──────┐      ┌──────┐      ┌──────┐      ┌──────┐    │
    │    │  D1  │──────│  D2  │──────│  D3  │──────│  D4  │    │
    │    └──────┘      └──────┘      └──────┘      └──────┘    │
    │                                                          │
    └──────────────────────────────────────────────────────────┘
    Figure 2.1 LILY2 functional units pipeline stages. A has
    only one pipeline, M has three pipeline stages for 2-cycle
    fixed-point MAC and 3-cycle floating-point MAC operations, D
    has four pipeline stages for 4-cycle load operations.

Figure 2.2 showed below is operations supported by LILY2 functional units.

    ┌────────────────────────────────────────────────────────────────┐
    │ Supported Operation               A    M    D    A+M+D   Total │
    ├────────────────────────────────────────────────────────────────┤
    │ Fixed-Point 08-bit ALUs           4    0    0      4       8   │
    ├────────────────────────────────────────────────────────────────┤
    │ Fixed-Point 16-bit ALUs           4    0    0      4       8   │
    ├────────────────────────────────────────────────────────────────┤
    │ Fixed-Point 32-bit ALUs           2    0    0      2       4   │
    ├────────────────────────────────────────────────────────────────┤
    │ Fixed-Point 08-bit MACs           0    4    0      4       8   │
    ├────────────────────────────────────────────────────────────────┤
    │ Fixed-Point 16-bit MACs           0    4    0      4       8   │
    ├────────────────────────────────────────────────────────────────┤
    │ Fixed-Point 32-bit MACs           0    4    0      4       8   │
    ├────────────────────────────────────────────────────────────────┤
    │ Floating-Point SP ALUs            2    0    0      2       4   │
    ├────────────────────────────────────────────────────────────────┤
    │ Floating-Point DP ALUs            1    0    0      1       2   │
    ├────────────────────────────────────────────────────────────────┤
    │ Floating-Point SP MACs            0    4    0      4       8   │
    ├────────────────────────────────────────────────────────────────┤
    │ Floating-Point DP MACs            0    1    0      1       2   │
    ├────────────────────────────────────────────────────────────────┤
    │ 64-bit Load Path                  0    0    1      1       1   │
    ├────────────────────────────────────────────────────────────────┤
    │ 64-bit Store Path                 0    0    1      1       1   │
    └────────────────────────────────────────────────────────────────┘
    Figure 2.2 Operations supported by LILY2 functional units. A is
    mainly responsible for ALU operations, M is mainly responsible for
    MAC operations and D is mainly responsible for data movement and
    memory access operations.

Figure 2.3 listed below is data paths in LILY2 functional units.

    ┌────────────────────────────────────────────────────────────────┐
    │   Data Paths     A1    M1    M2    M3    D1    D2    D3    D4  │
    ├────────────────────────────────────────────────────────────────┤
    │     I-Path       2     3     0     0     3     0     0     0   │
    ├────────────────────────────────────────────────────────────────┤
    │     O-Path       2     1     1     1     1     0     0     1   │
    └────────────────────────────────────────────────────────────────┘
    Figure 2.3 Data paths in LILY2 functional units. I-Path represents
    data reading and O-Path represents data writing. All the data
    reading happens in execution stage 1, but the data writing stages
    varies from instruction to instruction. The width of data paths
    are of no importance.


Arch-Dependent, Superscalar Features
────────────────────────────────────

    ┌──────┐┌──────┐    ┌──────┐┌──────┐   ┌──────┐┌──────┐
    │  A1  ││  A2  │    │  M1  ││  M2  │   │  D1  ││  D2  │
    └──────┘└──────┘    └──────┘└──────┘   └──────┘└──────┘
       │       │           │       │          │       │
    ┌─────────────────────────────────────────────────────┐
    │                      Black Box                      │
    └─────────────────────────────────────────────────────┘
               │               │              │
    ┌──────────────────────┐   │   ┌──────────────────────┐
    │    Regsiter File R   │───┴───│    Regsiter File F   │
    └──────────────────────┘       └──────────────────────┘
    Figure 2.3 Superscalar functional units architecture.
    There are six functional units for LILY2 to dispatch
    instructions under superscalar. Black box is the
    interfaces adaptor of the register file ports and
    functional units data paths.

Until now, an imprecision provement indicates that any two instructions can be
executed simultaneously in one cycle. Coincidently, two is the upper limit of
the issue width in LILY2.


Arch-Dependent, VLIW Features
─────────────────────────────

    ┌──────┐┌──────┐┌──────┐       ┌──────┐┌──────┐┌──────┐
    │  XA  ││  XM  ││  XD  │       │  YA  ││  YM  ││  YD  │
    └──────┘└──────┘└──────┘       └──────┘└──────┘└──────┘
       │       │       │              │       │       │
    ┌──────────────────────┐       ┌──────────────────────┐
    │       Black Box      │───┬───│       Black Box      │
    └──────────────────────┘   │   └──────────────────────┘
               │               │              │
    ┌──────────────────────┐   │   ┌──────────────────────┐
    │    Regsiter File X   │───┴───│    Regsiter File Y   │
    └──────────────────────┘       └──────────────────────┘
    Figure 2.4 VLIW functional units architecture. It's a
    clustered architecture with a cross path between the
    two clusters. Black box is the interfaces adaptor of
    the register file ports and functional units data paths.

I try to avoid exceptions when designing LILY2 but exceptions find me.
Here are the exceptional instructions in VLIW parallelism:
A. If MAW/MAD/MAQ is in XA/YA or XD/YD, SRW/SRD can not be in YA/XA, vice versa.
B. If SAW/SAD/SAQ is in XA/YA or XD/YD, no inst can be in YA/XA.
C. Only two MAW/MAD/MAQ can be executed in one cycle, and should be put in different clusters.
D. Only one SAW/SAD/SAQ can be executed in one cycle.
